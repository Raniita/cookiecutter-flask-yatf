version: '3.7'

services:

  # Main python flask app
  {{cookiecutter.dir_name}}:
    image: {{cookiecutter.docker_image_name}}
    restart: unless-stopped
    environment:
      - ADMIN_EMAIL={{cookiecutter.ADMIN_EMAIL}}
      - ADMIN_NAME={{cookiecutter.ADMIN_NAME}}
      - ADMIN_PASSWORD={{cookiecutter.ADMIN_PASSWORD}}
      - MYSQL_USER={{cookiecutter.MYSQL_USER}}
      - MYSQL_PASSWORD={{cookiecutter.MYSQL_PASSWORD}}
      - MYSQL_HOST={{cookiecutter.MYSQL_HOST}}
      - MYSQL_DATABASE={{cookiecutter.MYSQL_DATABASE}}
      - REDIS_HOST=redis
    volumes:
      - ./supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    labels:
      - traefik.enable=true
      - traefik.http.routers.{{cookiecutter.dir_name}}.entryPoints=web-secure
      - traefik.http.routers.{{cookiecutter.dir_name}}.rule=Host(`{{cookiecutter.production_domain}}`)
      # Other containers should always take priority over this one
      - traefik.http.routers.{{cookiecutter.dir_name}}.priority=1
      
  # Runs Job scheduler and CRON schedulers
  {{cookiecutter.dir_name}}-scheduler:
    image: {{cookiecutter.docker_image_name}}
    restart: unless-stopped
    environment:
      - ADMIN_EMAIL={{cookiecutter.ADMIN_EMAIL}}
      - ADMIN_NAME={{cookiecutter.ADMIN_NAME}}
      - ADMIN_PASSWORD={{cookiecutter.ADMIN_PASSWORD}}
      - MYSQL_USER={{cookiecutter.MYSQL_USER}}
      - MYSQL_PASSWORD={{cookiecutter.MYSQL_PASSWORD}}
      - MYSQL_HOST={{cookiecutter.MYSQL_HOST}}
      - MYSQL_DATABASE={{cookiecutter.MYSQL_DATABASE}}
      - REDIS_HOST={{cookicutter.REDIS_HOST}}
    command: flask run_scheduler
    
  # Runs long lived tasks and coordinates with lifecycle using redis
  {{cookiecutter.dir_name}}-worker:
    image: {{cookiecutter.docker_image_name}}
    restart: unless-stopped
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "1"
    environment:
      - ADMIN_EMAIL={{cookiecutter.ADMIN_EMAIL}}
      - ADMIN_NAME={{cookiecutter.ADMIN_NAME}}
      - ADMIN_PASSWORD={{cookiecutter.ADMIN_PASSWORD}}
      - MYSQL_USER={{cookiecutter.MYSQL_USER}}
      - MYSQL_PASSWORD={{cookiecutter.MYSQL_PASSWORD}}
      - MYSQL_HOST={{cookiecutter.MYSQL_HOST}}
      - MYSQL_DATABASE={{cookiecutter.MYSQL_DATABASE}}
      - REDIS_HOST={{cookicutter.REDIS_HOST}}
    command: flask run_worker
    
  # In-memory database used to coordinate Lifecycle and its worker(s)
  redis:
    image: redis
    restart: unless-stopped
    
  # Database used by Lifecycle to store (for the moment) user accounts
  db:
    image: mariadb
    restart: unless-stopped
    volumes:
      - ./db:/var/lib/mysql:rw
    environment:
      - MYSQL_DATABASE={{cookiecutter.MYSQL_DATABASE}}
      - MYSQL_USER={{cookicutter.MYSQL_USER}}
      - MYSQL_PASSWORD={{cookiecutter.MYSQL_PASSWORD}}
      - MYSQL_ROOT_PASSWORD={{cookiecutter.MYSQL_ROOT_PASSWORD}}

  # Database management tool
  adminer:
    image: adminer
    restart: unless-stopped
    environment:
      - ADMINER_DESIGN=arcs-material
      - ADMINER_DEFAULT_SERVER=db
    volumes:
      - ./app.sqlite:/app.sqlite
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.http.routers.{{cookiecutter.dir_name}}-adminer.entryPoints=web-secure
      - traefik.http.routers.{{cookiecutter.dir_name}}-adminer.rule=Host(`{{cookiecutter.production_domain}}`) && PathPrefix(`/adminer`)
    
